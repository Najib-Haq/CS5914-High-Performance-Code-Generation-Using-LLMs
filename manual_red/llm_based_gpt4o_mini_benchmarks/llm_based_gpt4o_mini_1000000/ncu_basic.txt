Running CUDA Reduction for size: 1000000
==PROF== Connected to process 3813198 (/home/najibulhaque/courses/CS5914-High-Performance-Code-Generation-Using-LLMs/manual_red/para.out)
==PROF== Profiling "sumReduction(int *, int *, int)" - 0: 0%....50%....100% - 10 passes
Sum: 1000000
Kernel Execution Time: 1782.18 ms
Result verification: PASSED
==PROF== Disconnected from process 3813198
[3813198] para.out@127.0.0.1
  sumReduction(int *, int *, int) (3907, 1, 1)x(256, 1, 1), Context 1, Stream 7, Device 0, CC 8.0
    Section: GPU Speed Of Light Throughput
    ----------------------- ------------- ------------
    Metric Name               Metric Unit Metric Value
    ----------------------- ------------- ------------
    DRAM Frequency          cycle/nsecond         1.57
    SM Frequency            cycle/nsecond         1.13
    Elapsed Cycles                  cycle       15,624
    Memory Throughput                   %        58.94
    DRAM Throughput                     %        14.44
    Duration                      usecond        13.76
    L1/TEX Cache Throughput             %        70.85
    L2 Cache Throughput                 %        15.12
    SM Active Cycles                cycle    12,954.19
    Compute (SM) Throughput             %        52.50
    ----------------------- ------------- ------------

    OPT   This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance 
          of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate    
          latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.                 

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                   256
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                  3,907
    Registers Per Thread             register/thread              16
    Shared Memory Configuration Size           Kbyte           32.77
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block      Kbyte/block            1.02
    Static Shared Memory Per Block        byte/block               0
    Threads                                   thread       1,000,192
    Waves Per SM                                                4.52
    -------------------------------- --------------- ---------------

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           32
    Block Limit Registers                 block           16
    Block Limit Shared Mem                block           16
    Block Limit Warps                     block            8
    Theoretical Active Warps per SM        warp           64
    Theoretical Occupancy                     %          100
    Achieved Occupancy                        %        82.12
    Achieved Active Warps Per SM           warp        52.56
    ------------------------------- ----------- ------------

    OPT   Estimated Speedup: 17.88%                                                                                     
          This kernel's theoretical occupancy is not impacted by any block limit. The difference between calculated     
          theoretical (100.0%) and measured achieved occupancy (82.1%) can be the result of warp scheduling overheads   
          or workload imbalances during the kernel execution. Load imbalances can occur between warps within a block    
          as well as across blocks of the same kernel. See the CUDA Best Practices Guide                                
          (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on           
          optimizing occupancy.                                                                                         


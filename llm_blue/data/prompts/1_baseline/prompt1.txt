prompt = (
    "You are an expert in high-performance CUDA code generation. Generate a complete and valid CUDA program "
    "that performs a sum reduction on an array of 1024 integers:\n"
    "  - Measure kernel execution time using CUDA events\n"
    "  - Print the final sum\n"
    "  - Print the kernel execution time\n"
    "  - Be self-contained with a main() function\n"
    "  - Compile with nvcc (version 12.4)\n\n"
    "Below is a minimal main function skeleton that you may expand upon. You may change it or replace it entirely "
    "with your own structure, as long as the requirements above are met:\n\n"
    "```\n"
    "#include <cuda_runtime.h>\n"
    "#include <iostream>\n"
    "\n"
    "// You may rename or modify this kernel as you see fit.\n"
    "__global__ void sumReductionKernel(int *d_input, int *d_output) {\n"
    "    // Fill in your sum reduction logic here.\n"
    "}\n"
    "\n"
    "int main() {\n"
    "    // 1. Allocate and initialize an array of 1024 integers on the host.\n"
    "    // 2. Allocate device memory.\n"
    "    // 3. Copy data from host to device.\n"
    "    // 4. Create CUDA events to measure execution time.\n"
    "    // 5. Launch the sum reduction kernel.\n"
    "    // 6. Record the kernel execution time.\n"
    "    // 7. Copy the final sum back to the host.\n"
    "    // 8. Print the sum and the kernel execution time.\n"
    "    // 9. Clean up device memory.\n"
    "\n"
    "    return 0;\n"
    "}\n"
    "```\n\n"
    "Produce only a single code block with the final, self-contained program that meets the requirements. "
    "Output must follow this exact format, with no additional commentary or disclaimers:\n\n"
    "```cuda\n"
    "// Your complete high-performance CUDA code here\n"
    "```\n\n"
)
